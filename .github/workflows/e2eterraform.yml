name: Terraform


on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  provision-ec2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-region: us-east-1
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Terraform Apply
        id:   apply
        env:
          TF_VAR_ec2_name:  "${{ github.event.inputs.ec2-name }}"
        run: |
          cd terraform/
          terraform init
          terraform validate
          terraform plan 
          terraform apply -auto-approve

  deploy-app:
    runs-on: ubuntu-latest
    needs: provision-ec2
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
      
      - name: Set IP env variable
        run: echo SERVER_PUBLIC_IP=${{ needs.provision-ec2.outputs.SERVER_PUBLIC_IP }} >> $GITHUB_ENV
      
      - name: Npm install & npm build
        run:  |
            npm install
            npm run build        
        env:
           url: ${{ needs.provision-ec2.outputs.SERVER_PUBLIC_IP }}
        
           
      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: changan1111/newdocker
          dockerfile: Dockerfile
          tags: v2, latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Login
        env: 
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login - u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.AWS_SSH_KEY_PRIVATE }}
          script: |
            sudo yum update -y
            sudo yum install docker -y
            sudo service docker start
            sudo usermod -a -G docker ec2-user
            sudo su docker pull changan1111/newdocker:v2
            sudo su docker run  -p 80:8080 changan1111/newdocker:v2
